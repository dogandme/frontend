name: "Chromatic"

on:
  pull_request:
    branches:
      - dev

jobs:
  chromatic:
    name: Run Chromatic and Test Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache npm dependencies
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check cache hit
        if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo 'npm cache hit!'

      - name: Check cache miss
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: echo 'npm cache missed!'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci

      - name: Install playwright browsers
        run: npx playwright install

      - name: Kill any process using port 6006 &
        run: npx kill-port 6006

      - name: Run Storybook locally
        run: npx storybook dev -p 6006 &
        continue-on-error: true

      - name: Wait for Storybook to start
        run: npx wait-on tcp:6006

      - name: Test Storybook
        run: npm run test-storybook 2> >(sed 's/\\x1b\\[[0-9;]*m//g' > test-storybook-output.txt)

      - name: Kill Storybook server
        run: npx kill-port 6006

      - name: Build and deploy with Chromatic
        run: npx chromatic --auto-accept-changes --exit-zero-on-changes --project-token=$CHROMATIC_PROJECT_TOKEN
        id: chromatic-build

      - name: Post test results as PR comment
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{ secrets.YONGHYEUN_GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('test-storybook-output.txt', 'utf8');
            const lines = output.split('\n\n').slice(1).join('\n');
            const outcome = "${{ steps.test-storybook.outcome }}"; 
            const success = outcome === 'success';
            const chromaticUrl = "${{ steps.chromatic-build.outputs.url }}";
            const comment = success 
              ? `### ✅ 현재 작업중인 브랜치의 스토리북 인터렉션 테스트 결과 - 모두 통과했습니다🔥\n\`\`\`\n${output}\n\`\`\`\n\n[Chromatic 빌드 결과 보기](${chromaticUrl})`
              : `### ❌ 현재 작업중인 브랜치의 스토리북 인터렉션 테스트 결과 - 통과하지 못한 테스트가 있어요!🫠\n\`\`\`\n${output}\n\`\`\`\n\n[Chromatic 빌드 결과 보기](${chromaticUrl})`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
      - name: Run Chromatic
        if: success()
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: "build-storybook"
          exitZeroOnChanges: true
          onlyChanged: true
